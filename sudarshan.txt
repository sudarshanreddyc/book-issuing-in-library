#include<stdio.h>
#include<pthread.h>
#include<stdlib.h>
#include<unistd.h>
#include<malloc.h>
int count6=0,count7=0,a1[100],a2[100],b2[100],i,j,b1[100],c[100],count1=0,count2=0,count3=0,count4=0,count5=0,n1,n2,t;
void student()
{
	int id;
	printf("\n enter no of students\n");
	scanf("%d",&n1);
	if(n1==0)
	{
		printf("\n no students to process");
		teacher();
		studentteacherqueue();
		exit(0);
	}
	printf("\n enter student unique id and space followed by arrival time\n");
	for(i=0;i<n1;i++)
	{
		scanf("%d %d",&a1[i],&b1[i]);
	}
	sort1();
}
void sort1()
{
	for(i=0;i<n1-1;i++)
	{
		for(j=0;j<n1-i-1;j++)
		{
			int temp1,temp2;
			if(b1[j]>b1[j+1])
			{
				temp1=b1[j];
				temp2=a1[j];
				b1[j]=b1[j+1];
				a1[j]=a1[j+1];
				b1[j+1]=temp1;
				a1[j+1]=temp2;
			}
		}
	}
}
void sort2()
{
	for(i=0;i<n2-1;i++)
	{
		for(j=0;j<n2-i-1;j++)
		{
			int temp1,temp2;
			if(b1[j]>b1[j+1])
			{
				temp1=b2[j];
				temp2=a2[j];
				b2[j]=b2[j+1];
				a2[j]=a2[j+1];
				b2[j+1]=temp1;
				a2[j+1]=temp2;
			}
		}
	}
}
void teacher()
{
	int id;
	printf("\n enter no of teachers\n");
	scanf("%d",&n2);
	if(n2==0 && n1==0)
	{
		printf("\n no teachers to process");
		exit(0);
	}
	if(n2==0)
	{
		printf("\n no teachers to process");
		studentprocess();
		exit(0);
	}
	printf("\n enter teacher unique id and space followed by arrival time\n");
	for(i=0;i<n2;i++)
	{
		scanf("%d %d",&a2[i],&b2[i]);
	}
	sort2();
	printf("\n enter time quantum as no of teachers to execute contiguously\n");
	scanf("%d",&t);
	teacherprocess();
}
void teacherprocess()
{
	if(n1==0 || t==0)
	{
		while(count2!=n2)
		{
			printf("\nteacher with id %d is processed",a2[count2]);
				c[count5]=a2[count2];
				count5++;
				count2++;
		}
	}
	while(count2!=n2)
	{
		if(count1==n1)
		{
			while(count2!=n2)
			{
			printf("\nteacher with id %d is processed",a2[count2]);
				c[count5]=a2[count2];
				count5++;
				count2++;
			}
			if(count2==n2)
			{
				printf("\n no teachers to process");
				studentteacherqueue();
				exit(0);
			}
		}
		else if((b2[count2]==b1[count1])||( b2[count2]==b1[count1]+1 && count6!=0))
		{
			count6++;
			count7++;
			if(count4==t)
			{
				count4=0;
				studentprocess();
			}
			else
			{
				printf("\nteacher with id %d is processed",a2[count2]);
				c[count5]=a2[count2];
				count5++;
				count4++;
				count2++;
			}
		}
		else if(b2[count2]==b1[count1]-1)
		{
			if(count4==t)
			{
				count4=0;
				studentprocess();
			}
			printf("\nteacher with id %d is processed",a2[count2]);
			c[count5]=a2[count2];
			count5++;
			count4++;
			count2++;
			count7++;
		}
		else if(b2[count2]<b1[count1])
		{
			printf("\nteacher with id %d is processed",a2[count2]);
			c[count5]=a2[count2];
			count5++;
			count2++;
			count7++;
		}
		else 
		{
			studentprocess();
		}
	}
	if(count2==n2)
	{
		printf("\n no teachers to process");
		studentprocess();
	}
}
void studentprocess()
{
	count4=0;
	//count6++;
	if(count2==n2)
	{
		while(count1!=n1)
		{
			printf("\nstudent with id %d is processed",a1[count1]);
			c[count5]=a1[count1];
			count5++;
			count1++;
		}
		if(count1==n1)
		{
			printf("\n no students to process");
			studentteacherqueue();
		}
	}	
	else
	{
		printf("\n student with id %d is processed",a1[count1]);
		c[count5]=a1[count1];
		count5++;
		count1++;
	}
}
void both()
{
	student();
	teacher();
}
void studentteacherqueue()
{
	if(n1==0&&n2==0)
	{
		printf("\n no process has started yet");
	}
	else
	{
	printf("\n");
	for(i=0;i<count5;i++)
	{
		printf("%d ",c[i]);
	}
	}
}		
int main()
{
 pthread_t t1;
 pthread_t t2;
 pthread_t t3;
 pthread_t t4;
 char ch;
 printf("enter your choice");
 A:
        printf("\n1.enter");
	printf("\n2.check processed queue");
        printf("\n3.exit\n");
 scanf("\n%d",&ch);
 int k=0,k1=0;
 switch(ch)
 {
 case 1:
        pthread_create(&t1,NULL,both,NULL);
        pthread_join(t1,NULL);
        break;
 case 2:
	studentteacherqueue();
	goto A;
	break;
 case 3:
	studentteacherqueue();
        exit(0);
 default:
        printf("\n enter correct choice");
	goto A;
 }
 //studentteacherqueue();
}
